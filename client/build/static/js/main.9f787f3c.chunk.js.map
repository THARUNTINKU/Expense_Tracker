{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionHistory.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","Fragment","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","getTransactions","a","axios","get","res","data","response","deleteTransaction","id","delete","addTransaction","config","headers","post","Provider","value","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","amounts","income","currAmount","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionHistory","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f787f3c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Expense Tracker</h2>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload,\r\n            };\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(\r\n                    (transaction) => transaction._id !== action.payload\r\n                ),\r\n            };\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload],\r\n            };\r\n\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true,\r\n};\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Create provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    // GET_TRANSACTIONS\r\n    const getTransactions = async () => {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error,\r\n            });\r\n        }\r\n    };\r\n    // DELETE_TRANSACTION\r\n    const deleteTransaction = async (id) => {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error,\r\n            });\r\n        }\r\n    };\r\n    // ADD_TRANSACTION\r\n    const addTransaction = async (transaction) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await axios.post(\r\n                '/api/v1/transactions',\r\n                transaction,\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                transactions: state.transactions,\r\n                error: state.error,\r\n                loading: state.loading,\r\n                getTransactions,\r\n                deleteTransaction,\r\n                addTransaction,\r\n            }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map((transaction) => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Your Balance</h4>\r\n            <h1>â‚¹{numberWithCommas(total)}</h1>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n    //array.reduce(function(total, currentValue, currentIndex, arr), initialValue)\r\n    const income = amounts\r\n        .filter((currAmount) => currAmount > 0)\r\n        .reduce((total, currAmount) => (total += currAmount), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = amounts\r\n        .filter((currAmount) => currAmount < 0)\r\n        .reduce((total, currAmount) => (total += currAmount), 0)\r\n        .toFixed(2);\r\n\r\n    return (\r\n        <div className='inc-exp-container'>\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className='money plus'>â‚¹{numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className='money minus'>â‚¹{numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <div>\r\n            <li className={sign === '-' ? 'minus' : 'plus'}>\r\n                {transaction.text}{' '}\r\n                <span>\r\n                    {sign}â‚¹{numberWithCommas(Math.abs(transaction.amount))}\r\n                </span>\r\n                <button\r\n                    className='delete-btn'\r\n                    onClick={() => deleteTransaction(transaction._id)}>\r\n                    x\r\n                </button>\r\n            </li>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionHistory = () => {\r\n    // @desc http request useEffect hooks needed\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Transaction History</h3>\r\n            <ul id='list' className='list'>\r\n                {transactions.map((transaction) => (\r\n                    <Transaction\r\n                        key={transaction._id}\r\n                        transaction={transaction}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const generateID = () => {\r\n        return Math.floor(Math.random() * 100000000);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: generateID(),\r\n            text,\r\n            amount: +amount, // Adding + sign turn to Number: parsing string to number\r\n        };\r\n        addTransaction(newTransaction);\r\n        setAmount('');\r\n        setText('');\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='form-control'>\r\n                    <label htmlFor='text'>Expense Title</label>\r\n                    <input\r\n                        type='text'\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        placeholder='Enter title...'\r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='amount'>\r\n                        Amount <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input\r\n                        type='number'\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        placeholder='Enter amount...'\r\n                    />\r\n                </div>\r\n                <button className='btn'>Add transaction</button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionHistory } from './components/TransactionHistory';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider }from './context/GlobalState'\n\nfunction App() {\n    return (\n        <GlobalProvider>\n            <Header />\n            <div className=\"container\">\n                <Balance />\n                <IncomeExpense />\n                <TransactionHistory />\n                <AddTransaction />\n            </div>\n        </GlobalProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}